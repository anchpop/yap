name: Rust CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-clippy:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        style: [default]
        rust:
          - "1.88.0"
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

#      - name: Cache venv
#        id: cache-venv
#        uses: actions/cache@v4
#        with:
#          path: generate-data/nlp/.venv
#          key: ${{ runner.os }}-venv-${{ hashFiles('generate-data/nlp/**/*.py') }}
#
#      - name: Install uv
#        uses: astral-sh/setup-uv@v5
#        with:
#          version: "0.7.11"
#
#      - name: Install spaCy models
#        working-directory: generate-data/nlp
#        run: |
#          uv sync
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_core_news_sm-3.8.0/fr_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_dep_news_trf-3.8.0/fr_dep_news_trf-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.8.0/es_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_dep_news_trf-3.8.0/es_dep_news_trf-3.8.0-py3-none-any.whl

      - name: Generate data
        run: cargo run --bin generate-data
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace -- -D warnings

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.88.0"
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          key: wasm-v1 # increment this to bust the cache if needed

#      - name: Cache venv
#        id: cache-venv
#        uses: actions/cache@v4
#        with:
#          path: generate-data/nlp/.venv
#          key: ${{ runner.os }}-venv-${{ hashFiles('generate-data/nlp/**/*.py') }}
#
#      - name: Install uv
#        uses: astral-sh/setup-uv@v5
#        with:
#          version: "0.7.11"
#
#      - name: Install spaCy models
#        working-directory: generate-data/nlp
#        run: |
#          uv sync
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_core_news_sm-3.8.0/fr_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_dep_news_trf-3.8.0/fr_dep_news_trf-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.8.0/es_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_dep_news_trf-3.8.0/es_dep_news_trf-3.8.0-py3-none-any.whl
      - name: Generate data
        run: cargo run --bin generate-data
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Build WASM module
        run: cargo clippy --target wasm32-unknown-unknown
        working-directory: yap-frontend-rs

  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        style: [no_default, default]
        rust:
          - "1.88.0"
        include:
          - style: no_default
            flags: "--no-default-features"
          - style: default
            flags: ""
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.style }}v1 # increment this to bust the cache if needed

#      - name: Cache venv
#        id: cache-venv
#        uses: actions/cache@v4
#        with:
#          path: generate-data/nlp/.venv
#          key: ${{ runner.os }}-venv-${{ hashFiles('generate-data/nlp/**/*.py') }}
#
#      - name: Install uv
#        uses: astral-sh/setup-uv@v5
#        with:
#          version: "0.7.11"
#
#      - name: Install spaCy models
#        working-directory: generate-data/nlp
#        run: |
#          uv sync
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_core_news_sm-3.8.0/fr_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_dep_news_trf-3.8.0/fr_dep_news_trf-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.8.0/es_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_dep_news_trf-3.8.0/es_dep_news_trf-3.8.0-py3-none-any.whl

      - name: Generate data
        run: cargo run --bin generate-data
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - uses: taiki-e/install-action@nextest

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --all ${{ matrix.flags }}
