name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown, x86_64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2
        with:
          key: v1 # increment this to bust the cache if needed

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

#      - name: Cache venv
#        id: cache-venv
#        uses: actions/cache@v4
#        with:
#          path: generate-data/nlp/.venv
#          key: ${{ runner.os }}-venv-${{ hashFiles('generate-data/nlp/**/*.py') }}
#
#      - name: Install uv
#        uses: astral-sh/setup-uv@v5
#        with:
#          version: "0.7.11"
#
#      - name: Install spaCy models
#        working-directory: generate-data/nlp
#        run: |
#          uv sync
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_core_news_sm-3.8.0/fr_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/fr_dep_news_trf-3.8.0/fr_dep_news_trf-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.8.0/es_core_news_sm-3.8.0-py3-none-any.whl
#          uv pip install https://github.com/explosion/spacy-models/releases/download/es_dep_news_trf-3.8.0/es_dep_news_trf-3.8.0-py3-none-any.whl

      - name: Generate data
        run: cargo run --bin generate-data
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Build WASM module
        run: wasm-pack build --release
        working-directory: yap-frontend-rs

      - name: Install frontend dependencies
        run: pnpm install
        working-directory: yap-frontend

      - name: Build frontend
        run: pnpm build
        working-directory: yap-frontend

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.event_name != 'pull_request'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./yap-frontend/dist
        if: github.event_name != 'pull_request'

  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
